<?xml version="1.0" encoding="iso-8859-1"?>
<rss version="2.0"><channel><title>YuviSense</title><link>http://yuvi.in/blog/</link><description>Codin Kid</description><lastBuildDate>Thu, 22 Jul 2010 00:37:32 GMT</lastBuildDate><generator>PyRSS2Gen-1.0.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Cheese GSoC Report - Week 8</title><link>http://yuvi.in/blog/cheese-gsoc-report-week-8.html</link><description>&lt;p&gt;This week on Cheese....&lt;/p&gt;
&lt;p&gt;WE MADE A RELEASE! :)&lt;/p&gt;
&lt;p&gt;http://ftp.gnome.org/pub/GNOME/sources/cheese/2.31/&lt;/p&gt;
&lt;p&gt;Cheese 2.31.1 is out. It's a dev release. Does not have zarro boogs.
But it is a release!&lt;/p&gt;
&lt;p&gt;This week, we&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fixed several perf bugs.&lt;/li&gt;
&lt;li&gt;Fixed some weird preferences dialog bugs&lt;/li&gt;
&lt;li&gt;Filed (and eventually had fixed) a bug in GStreamer.&lt;/li&gt;
&lt;li&gt;Fixed a regression&lt;/li&gt;
&lt;li&gt;Beautified the UI a bit (text name overlay of effects, etc)&lt;/li&gt;
&lt;li&gt;Assorted administrative work to prepare for release (Copyright
updating, merging back into master, etc)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I also passed my mid terms :)&lt;/p&gt;
&lt;p&gt;Next week...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Remove dependency on Mx Toolkit (it is not a blessed dependency,
and i'm not using large parts of it anyway)&lt;/li&gt;
&lt;li&gt;Performance improvements, especially at startup time. It is taking
&lt;em&gt;waaay&lt;/em&gt; too long .&lt;/li&gt;
&lt;li&gt;Fix problems in video mode.&lt;/li&gt;
&lt;li&gt;Make the TODO list shorter.&lt;/li&gt;
&lt;/ol&gt;</description><guid isPermaLink="true">http://yuvi.in/blog/cheese-gsoc-report-week-8.html</guid><pubDate>Thu, 22 Jul 2010 00:37:31 GMT</pubDate></item><item><title>Cheese GSoC Report - Week 7</title><link>http://yuvi.in/blog/cheese-gsoc-report-week-7.html</link><description>&lt;p&gt;This week on Cheese....&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Performance enhancements. Sacrificed some startup time for &lt;strong&gt;much&lt;/strong&gt; improved usage time. Viewing live effects are now a snap. So is selecting an effect. We went in some cases from ~15s to &amp;lt;1s. Thanks to Tester (and other folks) at #gstreamer for helping out :)&lt;/li&gt;
&lt;li&gt;Paging of effects. Effects are now in pages of 9 each, instead of a huge scroller area.&lt;/li&gt;
&lt;li&gt;Applying effects without stopping the pipeline. Makes things much faster.&lt;/li&gt;
&lt;li&gt;Implementing the popup menu for thumbnails.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We'll be making a release anytime now :) &lt;/p&gt;
&lt;p&gt;All of last week's goals were met, except the code cleanup. It will probably have to wait after release.&lt;/p&gt;
&lt;p&gt;As I type this, there are 6 blockers before we can make a release. Will make a post when we do a release, hopefully with a screencast too!&lt;/p&gt;
&lt;p&gt;Next week is kinda unpredictable - I'll douse fires as they arise in the code (reported by people who hopefully test the release), and also work on reducing the length of items in the TODO.&lt;/p&gt;</description><guid isPermaLink="true">http://yuvi.in/blog/cheese-gsoc-report-week-7.html</guid><pubDate>Mon, 12 Jul 2010 18:26:54 GMT</pubDate></item><item><title>Reddit University - SICP Reading Group</title><link>http://yuvi.in/blog/reddit-university-sicp-reading-group.html</link><description>&lt;p&gt;I've joined &lt;a href="http://universityofreddit.com/v2/"&gt;Reddit University&lt;/a&gt;'s &lt;a href="http://universityofreddit.com/v2/class.php?id=57"&gt;SICP Reading Group&lt;/a&gt; class. I've wanted to read through &lt;a href="http://mitpress.mit.edu/sicp/full-text/book/book.html"&gt;SICP&lt;/a&gt; for a long time, and have gotten started many times - never completed it. Maybe the group effects will help me finish this time :)&lt;/p&gt;
&lt;p&gt;If you're interested in expanding your horizons beyond mere code-monkey programming, &lt;a href="http://universityofreddit.com/v2/class.php?id=57"&gt;join up!&lt;/a&gt;&lt;/p&gt;</description><guid isPermaLink="true">http://yuvi.in/blog/reddit-university-sicp-reading-group.html</guid><pubDate>Sat, 03 Jul 2010 17:59:34 GMT</pubDate></item><item><title>Cheese GSoC Report - Week 5</title><link>http://yuvi.in/blog/cheese-gsoc-report-week-5.html</link><description>&lt;p&gt;Late report. But I did get quite a bit done!&lt;/p&gt;
&lt;p&gt;Last week...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Video Effects file format reader&lt;/li&gt;
&lt;li&gt;Live Preview of Effects! (YAY!)&lt;/li&gt;
&lt;li&gt;Effect files added&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Live Preview took most of my time. We bought down CPU usage from ~90% to a more manageable ~50%. Cleaned up code a bit (still needs more cleanup). It is rather very 'demoable', provided you gloss over the slowdowns. &lt;/p&gt;
&lt;p&gt;Coming up next week would be...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Even less CPU Usage! We're now even with current Cheese (which does not give you live previews). I want to bring this down even more.&lt;/li&gt;
&lt;li&gt;Reduced latency for switching operations. Moving between effects/screens now has more than a second of latency. I should reduce this to much lesser than a second.&lt;/li&gt;
&lt;li&gt;Code cleanup. Some of the C code is a mess - needs to be cleaned up much. &lt;/li&gt;
&lt;li&gt;Error fixing. You can now crash it by looking at it at a 58 degree angle, during new moon days. Bugs like these will be fixed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Cya in a week, with a very-usable Cheese! I'll post a screencast as soon as I've made Cheese a bit more sexy :)&lt;/p&gt;</description><guid isPermaLink="true">http://yuvi.in/blog/cheese-gsoc-report-week-5.html</guid><pubDate>Thu, 01 Jul 2010 02:35:58 GMT</pubDate></item><item><title>Cheese GSoC Report - Week 4</title><link>http://yuvi.in/blog/cheese-gsoc-report-week-4.html</link><description>&lt;p&gt;Fourth week of the Summer of Code was over a few days back, and this report is overdue :( I've not been able to code as much as I wanted to this week - due to various non-technical issues. Will compensate in the next week.&lt;/p&gt;
&lt;p&gt;Last week...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Countdown Animations (Thanks to _ke for cleanup!)&lt;/li&gt;
&lt;li&gt;GConf Cleanup&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Yes, that was it. &lt;/p&gt;
&lt;p&gt;Totally failed to meet last week's goals. Sigh.&lt;/p&gt;
&lt;p&gt;By next week, I hope to have accomplished...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Video Effects file format reader&lt;/li&gt;
&lt;li&gt;Basic Effects application to the currently playing pipeline.&lt;/li&gt;
&lt;li&gt;Mockups on best weay to present effects UI to user&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here is to hoping the coming week turns out better than last one :)&lt;/p&gt;</description><guid isPermaLink="true">http://yuvi.in/blog/cheese-gsoc-report-week-4.html</guid><pubDate>Sun, 20 Jun 2010 04:24:14 GMT</pubDate></item><item><title>Cheese GSoC Report - Week 3</title><link>http://yuvi.in/blog/cheese-gsoc-report-week-3.html</link><description>&lt;p&gt;Third week of the Summer of Code is over! And during this week....&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Successfully wrapped up the core cheese functionality (&lt;code&gt;libcheese&lt;/code&gt;) with a vala wrapper&lt;/li&gt;
&lt;li&gt;Made Photo Mode work&lt;/li&gt;
&lt;li&gt;Made Video Mode work&lt;/li&gt;
&lt;li&gt;Made Burst Mode work&lt;/li&gt;
&lt;li&gt;Made cheese single instance using &lt;code&gt;libunique&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Started work on cleaning up GConf code.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In &lt;a href="http://yuvi.in/blog/cheese-gsoc-report-week-2.html"&gt;last week's report&lt;/a&gt;, I mentioned that I didn't quite like my pace of work. It is still the same (approx. 3 hours a day on average, excluding overhead) - but I've come to accept that it is okay. No more bitching about it, as long as I'm meeting my goals.&lt;/p&gt;
&lt;p&gt;Last week's predictions were to complete libcheese wrapping, photo mode, video mode and burst mode. Set goals accomplished with ample time to spare - time that was spent trying to get countdown animations to work (still haven't managed), and make cheese single instance. I under-estimated last week - should improve accuracy.&lt;/p&gt;
&lt;p&gt;By next week, I hope to have accomplished...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fully functional preferences dialog box&lt;/li&gt;
&lt;li&gt;Countdown animations&lt;/li&gt;
&lt;li&gt;Full GConf integration (i.e. remember all your preferences)&lt;/li&gt;
&lt;li&gt;Full blown keybindings (Basically &lt;code&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt; to cancel, since the others are already implemented)&lt;/li&gt;
&lt;li&gt;Trash/Delete implementation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It would have everything Cheese 2.30.1 has, except for Effects.&lt;/p&gt;
&lt;p&gt;And what did I learn this week?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;RTFM. Again. And again. THEN ask on IRC. &lt;/li&gt;
&lt;li&gt;How to use gdb. I've only cursorily used it before - but digging into it deeper now (thank you, segfault!)&lt;/li&gt;
&lt;/ol&gt;</description><guid isPermaLink="true">http://yuvi.in/blog/cheese-gsoc-report-week-3.html</guid><pubDate>Sun, 13 Jun 2010 04:24:14 GMT</pubDate></item><item><title>Cheese GSoC Report - Week 2</title><link>http://yuvi.in/blog/cheese-gsoc-report-week-2.html</link><description>&lt;p&gt;Second week of the (rather hot and sweaty) Summer of Code is over! And during this week....&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Replicated most of the UI of Cheese&lt;/li&gt;
&lt;li&gt;Learnt how to make C and Vala code co-exist (Thanks folks at #vala!)&lt;/li&gt;
&lt;li&gt;Made the thumbnail widget work, in both modes/orientations&lt;/li&gt;
&lt;li&gt;Implemented fullscreen mode, with autohiding of the action buttons&lt;/li&gt;
&lt;li&gt;Started modifying parts of libcheese to support clutter for video output&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In &lt;a href="http://yuvi.in/blog/cheese-gsoc-report-week-1.html"&gt;last week's report&lt;/a&gt;, I mentioned that I didn't quite like my pace of work. I &lt;em&gt;still&lt;/em&gt; don't like it - &lt;a href="http://projecthamster.wordpress.com/"&gt;Hamster&lt;/a&gt; reports I've spent 15.2 hours since Monday on Cheese, which is just about 3 hours a day! Totally unacceptable, and I'd like to increase that number considerably. &lt;/p&gt;
&lt;p&gt;Last week's predictions were for libcheese integration, UI replication and Thumbnail view implementation. I've finished the last two, and have made a start on the first. Needs improvement.&lt;/p&gt;
&lt;p&gt;By next week, I hope to have accomplished...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Working video preview showing up!&lt;/li&gt;
&lt;li&gt;Photo taking works&lt;/li&gt;
&lt;li&gt;Video taking works&lt;/li&gt;
&lt;li&gt;Burst mode works&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Basically, it would be usable. In a basic way.&lt;/p&gt;
&lt;p&gt;And what did I learn this week?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Don't try to be too clever. Clear Code &amp;gt; Lesser LoC.&lt;/li&gt;
&lt;li&gt;Ask first. Verify assumptions.&lt;/li&gt;
&lt;li&gt;Just because something can be rewritten, does not mean it should be :)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;On an unrelated note, my sleep cycle is totally messed up - I've been sleeping at 6 AM and waking up at 2 PM. Sunlight feels weird to me. I haven't been able to do my biweekly bicycle rides :( I should also try to fix that before the end of next week.&lt;/p&gt;</description><guid isPermaLink="true">http://yuvi.in/blog/cheese-gsoc-report-week-2.html</guid><pubDate>Sun, 06 Jun 2010 04:20:42 GMT</pubDate></item><item><title>Cheese GSoC Report - Week 1</title><link>http://yuvi.in/blog/cheese-gsoc-report-week-1.html</link><description>&lt;p&gt;First week of official coding is over. What do I have to show for it?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Moved code from Github to GNOME Git (Thanks fargiolas!)&lt;/li&gt;
&lt;li&gt;Learnt how to use GTKBuilder, and how to autoconnect signals to vala callback functions.&lt;/li&gt;
&lt;li&gt;Learnt &lt;em&gt;some&lt;/em&gt; of the intricacies of Gtk+ Layouts (They still have a lot to teach me!)&lt;/li&gt;
&lt;li&gt;Got a very basic version of the basic Cheese window up and running.&lt;/li&gt;
&lt;li&gt;Learnt how to embed Clutter into the Gtk+ base of Cheese.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So far so good. I don't quite like the pace of my work - I should be going faster. Hopefully I won't be feeling like this at the end of next week :)&lt;/p&gt;
&lt;p&gt;By next week, I hope to have accomplished...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pixel perfect UI, replicating exactly what is in cheese right now (except for the viewport, ofcourse)&lt;/li&gt;
&lt;li&gt;Vala bindings (&lt;code&gt;.vapi&lt;/code&gt; files, basically) for &lt;code&gt;libcheese&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Thumbnail View finished (either wrap and use current code, steal some some other project or write my own)&lt;/li&gt;
&lt;li&gt;Basic work on modifying libcheese to support video output to a ClutterTexture&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;GSoC is primarily about learning, so what have I learnt so far?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt; is a powerful tool, provided you do not fight it (thanks fargiolas!)&lt;/li&gt;
&lt;li&gt;Just because code works, doesn't mean it is good enough! (thanks _ke!)&lt;/li&gt;
&lt;li&gt;When you are stuck, STOP AND ASK FOR DIRECTIONS! (thanks fargiolas!)&lt;/li&gt;
&lt;/ol&gt;</description><guid isPermaLink="true">http://yuvi.in/blog/cheese-gsoc-report-week-1.html</guid><pubDate>Sun, 30 May 2010 02:22:41 GMT</pubDate></item><item><title>Vala, GTKBuilder and Autoconnecting Signal Handlers</title><link>http://yuvi.in/blog/vala-gtkbuilder-and-autoconnecting-signal-handlers.html</link><description>&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm not an expert on Vala, GTK+, or anything else for that matter. If I am off base someplace, comment.&lt;/p&gt;
&lt;p&gt;I spent quite a some time today trying to get GTKBuilder to automagically connect all my signals to their handlers. I tripped up at a few places, and so recording them here for posterity.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you are using instance methods (like most of us are), you've to decorate your handler function with the attribute &lt;code&gt;[CCode (instance_pos=-1)]&lt;/code&gt;. This makes sure that the function is passed the &lt;code&gt;this&lt;/code&gt; pointer as last argument, rather than first. You've to do this because &lt;code&gt;Builder.connect_signals&lt;/code&gt; passes the instance as last parameter (&lt;code&gt;user_data&lt;/code&gt;), and by aligning your &lt;code&gt;this&lt;/code&gt; pointer with &lt;code&gt;user_data&lt;/code&gt;, you make sure the correct instance is called.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure your handler function signature matches what is expected. Ignore the &lt;code&gt;user_data&lt;/code&gt; parameter of most signals - it is used internally by &lt;code&gt;Builder.connect_signals&lt;/code&gt; (see above point).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure you pass &lt;code&gt;--pkg gmodule-2.0&lt;/code&gt; to your &lt;code&gt;valac&lt;/code&gt;. If you're using Autotools, this means you pass it to &lt;code&gt;VALAFLAGS&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sure your C compiler is called with &lt;code&gt;-dynamic-export&lt;/code&gt;. I'm told this enabled support for &lt;code&gt;dlopen&lt;/code&gt; in the binary produced.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mangle your names properly. &lt;code&gt;Cheese.MainWindow.on_quit()&lt;/code&gt; becomes &lt;code&gt;cheese_main_window_on_quit&lt;/code&gt; on C, and that is what GTKBuilder expects. If you are not sure how your function name is mangled by &lt;code&gt;valac&lt;/code&gt;, checkout the generated &lt;code&gt;.c&lt;/code&gt; file.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you do all these 5 things right and you're still having trouble, turn up on #vala at irc.gimp.net and ask the helpful folks there :)&lt;/p&gt;</description><guid isPermaLink="true">http://yuvi.in/blog/vala-gtkbuilder-and-autoconnecting-signal-handlers.html</guid><pubDate>Sun, 30 May 2010 02:22:41 GMT</pubDate></item><item><title>GSoC Milestones - Vala Build using AutoTools</title><link>http://yuvi.in/blog/gsoc-milestones-vala-build-using-autotools.html</link><description>&lt;p&gt;&lt;em&gt;I'm using a &lt;a href="http://www.rememberthemilk.com/home/yuvipanda/13485943/"&gt;RTM List&lt;/a&gt; to track my milestones for this &lt;a href="http://yuvi.in/blog/gsoc-2010-the-beginning.html"&gt;my GSoC&lt;/a&gt; this year. I'll be making a blog post for each item ticked off that list, to share what I've learnt in my journey from n00b to someone whose code is good enough to be included in GNOME. This is part 1 in the series, where I tell you about autotools&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;My GSoC project involves, moving major parts (UI) of Cheese to a new language - &lt;a href="http://live.gnome.org/Vala"&gt;Vala&lt;/a&gt;. Vala is more an extremely glorious C preprocessor than a language of its own - it just translates down to GObject based C code, rather than bytecode/objectcode. The syntax is very C#ish - I was using &lt;a href="http://www.emacswiki.org/emacs/CSharpMode"&gt;csharp-mode&lt;/a&gt; in emacs to code vala till I got bored enough to download &lt;a href="http://live.gnome.org/Vala/Emacs"&gt;vala-mode&lt;/a&gt;. It's got closures - haven't used them yet, here is to hoping they're real closures. It has &lt;em&gt;tons&lt;/em&gt; of libraries - it takes a few (minutes|hours) to write a binding for any C library, so many bindings already exist. You don't lose speed - Vala is compiled down to C code. It also has one of Java's suckiest features - &lt;em&gt;Checked Exceptions&lt;/em&gt;. The documentation is non existent - you've to pretty much read through the bindings, or the original C library's documentation to get anything done. And not many people know such a language exists (&lt;a href="http://kausikram.net/"&gt;Kausik&lt;/a&gt; for example - but he also didn't know you could output pdf from latex, so I don't think his opinion counts :D)&lt;/p&gt;
&lt;p&gt;Cheese uses autotools for building. I had to tweak their script to make it build my Vala code as well. I've never worked with any of the autotools stuff before - I didn't even know &lt;code&gt;.ac&lt;/code&gt; stood for &lt;code&gt;autoconf&lt;/code&gt; and &lt;code&gt;.am&lt;/code&gt; stood for automake. No big deal - Google knows it all and will tell you for free. I JFGI and found a bunch of articles about using autotools to successfully build vala projects. After reading &lt;a href="http://www.lrde.epita.fr/~adl/autotools.html"&gt;this monstrous (180+ slides, but ~500 pages) Autotools presentation&lt;/a&gt; (which is actually very, &lt;em&gt;very&lt;/em&gt; good, btw), I had a working build script. It built my single &lt;code&gt;cheese.vala&lt;/code&gt; file that did nothing but run a loop and wait to be terminated. It had a place where I could add more &lt;code&gt;.vala&lt;/code&gt; files and they should (should) be included in the build. It was hackish, but like most hacks, it worked. &lt;a href="http://www.codinghorror.com/blog/2007/03/the-works-on-my-machine-certification-program.html"&gt;On My Machine&lt;/a&gt;(tm). &lt;/p&gt;
&lt;p&gt;Nowhere else. Turned out my script wasn't working at all - just faking it to me. I had initially tested out &lt;code&gt;valac&lt;/code&gt; (the vala compiler), which had produced a &lt;code&gt;.c&lt;/code&gt; file. Since &lt;code&gt;make&lt;/code&gt; was supposed to produce the same file, and it wasn't stale (I hadn't touched my &lt;code&gt;cheese.vala&lt;/code&gt;), it just proceeded to compiling the &lt;code&gt;.c&lt;/code&gt; files with &lt;code&gt;gcc&lt;/code&gt;. The Vala part of the build script wasn't being executed at all. Removing the &lt;code&gt;.c&lt;/code&gt; file told me that my hackish script hadn't worked at all. &lt;/p&gt;
&lt;p&gt;After banging my head for a while to figure out &lt;em&gt;why&lt;/em&gt; it wasn't working, I finally landed up on the official autotools docs. Autotools had added &lt;a href="http://www.gnu.org/software/hello/manual/automake/Vala-Support.html"&gt;native vala support&lt;/a&gt;. The hack I found was not necessary. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;facepalm&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Moral of the Story&lt;/strong&gt;: RTFM comes first, not JFGI.&lt;/p&gt;
&lt;p&gt;Anyway, I rewrote the build script to be much more cleaner in a couple of minutes. And it worked. &lt;/p&gt;
&lt;p&gt;Build systems are actually a lot of fun once you get the hang of it. A black screen with fast scrolling green text cryptic to everyone else but totally sensible to you is incredibly attractive, no? :)&lt;/p&gt;</description><guid isPermaLink="true">http://yuvi.in/blog/gsoc-milestones-vala-build-using-autotools.html</guid><pubDate>Thu, 06 May 2010 07:00:20 GMT</pubDate></item></channel></rss>